{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport createAxiosInstance from \"../../config/api\";\nexport function InstitutionListApi() {\n  _s();\n  const [institutionList, setInstitutionList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const loadList = useCallback(async () => {\n    setLoading(true);\n    setError(\"\"); // 상태 초기화\n    try {\n      const axiosInstance = createAxiosInstance(); // 인스턴스 생성\n      const response = await axiosInstance.get(\"/personnel/institution/list\");\n      setInstitutionList(response.data);\n    } catch (err) {\n      setError(\"교육기관 정보를 불러오지 못했습니다.\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return {\n    loadList,\n    loading,\n    error,\n    institutionList\n  };\n}\n_s(InstitutionListApi, \"IZERk+Gv0gdvNI8lc5isOLA9FJo=\");\n_c = InstitutionListApi;\nvar _c;\n$RefreshReg$(_c, \"InstitutionListApi\");","map":{"version":3,"names":["useState","createAxiosInstance","InstitutionListApi","_s","institutionList","setInstitutionList","loading","setLoading","error","setError","loadList","useCallback","axiosInstance","response","get","data","err","console","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/react/src/personnel/utils/InstitutionListApi.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport createAxiosInstance from \"../../config/api\";\r\n\r\nexport function InstitutionListApi() {\r\n    const [institutionList, setInstitutionList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const loadList = useCallback(async () => {\r\n        setLoading(true);\r\n        setError(\"\");   // 상태 초기화\r\n                try {\r\n                    const axiosInstance = createAxiosInstance(); // 인스턴스 생성\r\n                    const response = await axiosInstance.get(\"/personnel/institution/list\");\r\n                    setInstitutionList(response.data);\r\n                } catch (err) {\r\n                    setError(\"교육기관 정보를 불러오지 못했습니다.\");\r\n                    console.error(err);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n    }, []);\r\n    return { loadList, loading, error, institutionList};\r\n}\r\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,mBAAmB,MAAM,kBAAkB;AAElD,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,QAAQ,GAAGC,WAAW,CAAC,YAAY;IACrCJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAG;IACR,IAAI;MACA,MAAMG,aAAa,GAAGX,mBAAmB,CAAC,CAAC,CAAC,CAAC;MAC7C,MAAMY,QAAQ,GAAG,MAAMD,aAAa,CAACE,GAAG,CAAC,6BAA6B,CAAC;MACvET,kBAAkB,CAACQ,QAAQ,CAACE,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVP,QAAQ,CAAC,sBAAsB,CAAC;MAChCQ,OAAO,CAACT,KAAK,CAACQ,GAAG,CAAC;IACtB,CAAC,SAAS;MACNT,UAAU,CAAC,KAAK,CAAC;IACrB;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEG,QAAQ;IAAEJ,OAAO;IAAEE,KAAK;IAAEJ;EAAe,CAAC;AACvD;AAACD,EAAA,CApBeD,kBAAkB;AAAAgB,EAAA,GAAlBhB,kBAAkB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}