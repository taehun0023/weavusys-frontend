{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";// 로그인 상태와 관련된 데이터를 관리할 Context 생성\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext({isLoggedIn:false,token:null,login:()=>{},logout:()=>{}});export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[isLoggedIn,setIsLoggedIn]=useState(false);const[token,setToken]=useState(null);// token 상태 추가\nconst[loading,setLoading]=useState(true);useEffect(()=>{const savedToken=localStorage.getItem(\"token\");if(savedToken){setIsLoggedIn(true);setToken(savedToken);}setLoading(false);},[]);const login=newToken=>{const expirationTime=new Date().getTime()+3600*1000;// 1시간 후\nlocalStorage.setItem(\"token\",newToken);// 토큰 저장\nlocalStorage.setItem(\"expirationTime\",expirationTime);setIsLoggedIn(true);setToken(newToken);};const logout=()=>{setIsLoggedIn(false);setToken(null);localStorage.removeItem(\"token\");// 토큰 삭제\nlocalStorage.removeItem(\"expirationTime\");// 만료 시간 삭제\n};useEffect(()=>{const checkTokenExpiration=()=>{const expirationTime=localStorage.getItem(\"expirationTime\");if(expirationTime){const timeLeft=parseInt(expirationTime,10)-new Date().getTime();if(timeLeft<=0){logout();}else{setTimeout(logout,timeLeft);// 남은 시간만큼 대기 후 로그아웃\n}}};checkTokenExpiration();// 초기 확인\nreturn()=>clearTimeout();// 클린업\n},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// 초기화 중 로딩 상태 표시\n}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn,token,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","isLoggedIn","token","login","logout","useAuth","AuthProvider","_ref","children","setIsLoggedIn","setToken","loading","setLoading","savedToken","localStorage","getItem","newToken","expirationTime","Date","getTime","setItem","removeItem","checkTokenExpiration","timeLeft","parseInt","setTimeout","clearTimeout","Provider","value"],"sources":["C:/Users/user/Desktop/react/src/config/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// 로그인 상태와 관련된 데이터를 관리할 Context 생성\r\nconst AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [token, setToken] = useState(null); // token 상태 추가\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const savedToken = localStorage.getItem(\"token\");\r\n    if (savedToken) {\r\n      setIsLoggedIn(true);\r\n      setToken(savedToken);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (newToken) => {\r\n    const expirationTime = new Date().getTime() + 3600 * 1000; // 1시간 후\r\n    localStorage.setItem(\"token\", newToken); // 토큰 저장\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n    setIsLoggedIn(true);\r\n    setToken(newToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\"); // 토큰 삭제\r\n    localStorage.removeItem(\"expirationTime\"); // 만료 시간 삭제\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkTokenExpiration = () => {\r\n      const expirationTime = localStorage.getItem(\"expirationTime\");\r\n      if (expirationTime) {\r\n        const timeLeft = parseInt(expirationTime, 10) - new Date().getTime();\r\n        if (timeLeft <= 0) {\r\n          logout();\r\n        } else {\r\n          setTimeout(logout, timeLeft); // 남은 시간만큼 대기 후 로그아웃\r\n        }\r\n      }\r\n    };\r\n\r\n    checkTokenExpiration(); // 초기 확인\r\n\r\n    return () => clearTimeout(); // 클린업\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // 초기화 중 로딩 상태 표시\r\n  }\r\n\r\n  return (\r\n      <AuthContext.Provider value={{ isLoggedIn, token, login, logout }}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}