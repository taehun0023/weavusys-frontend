{"ast":null,"code":"import React from\"react\";import{HashRouter as Router,Route,Routes,Navigate}from\"react-router-dom\";import{AuthProvider,useAuth}from\"./config/AuthContext\";import LoginPage from\"./pages/LoginPage\";import Dashboard from\"./pages/Dashboard\";import Navbar from\"./config/Navbar\";import AccrualDetail from\"./pages/AccrualDetail\";import Admin from\"./pages/Admin\";import EmployeeDashboard from\"./pages/EmployeeDashboard\";import EmployeeRegi from\"./pages/EmployeeRegi\";import EmployeeDetail from\"./pages/EmployeeDetail\";import{useEffect}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Layout=_ref=>{let{children}=_ref;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"100px\",padding:\"0px\"},children:children})]});};const ProtectedRoute=_ref2=>{let{children}=_ref2;const{isLoggedIn}=useAuth();return isLoggedIn?children:/*#__PURE__*/_jsx(Navigate,{to:\"/\"});};const App=()=>{const navigate=useNavigate();const{isLoggedIn}=useAuth();const location=useLocation();useEffect(()=>{// 새로고침 후 로그인 상태 확인\nif(isLoggedIn&&location.pathname===\"/#/\"){navigate('/dashboard');// 로그인 상태에서 \"/\"에 있을 경우에만 리다이렉트\n}else if(!isLoggedIn&&location.pathname!==\"/#/\"){navigate('/');// 로그인되지 않은 사용자가 다른 경로로 접근할 경우 리다이렉트\n}},[isLoggedIn,navigate,location.pathname]);return/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Dashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard/:employeeId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(AccrualDetail,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Admin,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/employee\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(EmployeeDashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/employee/new\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(EmployeeRegi,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/employee/:employeeId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(EmployeeDetail,{})})})]})});};const Root=()=>/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(App,{})})});export default Root;","map":{"version":3,"names":["React","HashRouter","Router","Route","Routes","Navigate","AuthProvider","useAuth","LoginPage","Dashboard","Navbar","AccrualDetail","Admin","EmployeeDashboard","EmployeeRegi","EmployeeDetail","useEffect","useNavigate","useLocation","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Layout","_ref","children","style","marginTop","padding","ProtectedRoute","_ref2","isLoggedIn","to","App","navigate","location","pathname","path","element","Root"],"sources":["C:/Users/user/Desktop/react/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Routes,\r\n    Navigate,\r\n} from \"react-router-dom\";\r\nimport { AuthProvider, useAuth } from \"./config/AuthContext\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Navbar from \"./config/Navbar\";\r\nimport AccrualDetail from \"./pages/AccrualDetail\";\r\nimport Admin from \"./pages/Admin\";\r\nimport EmployeeDashboard from \"./pages/EmployeeDashboard\";\r\nimport EmployeeRegi from \"./pages/EmployeeRegi\";\r\nimport EmployeeDetail from \"./pages/EmployeeDetail\";\r\nimport {useEffect} from \"react\";\r\nimport { useNavigate, useLocation  } from \"react-router-dom\";\r\nconst Layout = ({ children }) => (\r\n    <>\r\n        <Navbar />\r\n        <div style={{ marginTop: \"100px\", padding: \"0px\" }}>{children}</div>\r\n    </>\r\n);\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const { isLoggedIn } = useAuth();\r\n    return isLoggedIn ? children : <Navigate to=\"/\" />;\r\n};\r\n\r\nconst App = () => {\r\n    const navigate = useNavigate();\r\n    const { isLoggedIn } = useAuth();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        // 새로고침 후 로그인 상태 확인\r\n        if (isLoggedIn && location.pathname === \"/#/\") {\r\n            navigate('/dashboard'); // 로그인 상태에서 \"/\"에 있을 경우에만 리다이렉트\r\n        } else if (!isLoggedIn && location.pathname !== \"/#/\") {\r\n            navigate('/'); // 로그인되지 않은 사용자가 다른 경로로 접근할 경우 리다이렉트\r\n        }\r\n    }, [isLoggedIn, navigate, location.pathname ]);\r\n\r\n    return(\r\n        <Layout>\r\n            <Routes>\r\n                <Route path=\"/\" element={<LoginPage />} />\r\n                <Route\r\n                    path=\"/dashboard\"\r\n                    element={\r\n                        <ProtectedRoute>\r\n                            <Dashboard />\r\n                        </ProtectedRoute>\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/dashboard/:employeeId\"\r\n                    element={\r\n                        <ProtectedRoute>\r\n                            <AccrualDetail />\r\n                        </ProtectedRoute>\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/admin\"\r\n                    element={\r\n                        <ProtectedRoute>\r\n                            <Admin />\r\n                        </ProtectedRoute>\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/employee\"\r\n                    element={\r\n                        <ProtectedRoute>\r\n                            <EmployeeDashboard />\r\n                        </ProtectedRoute>\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/employee/new\"\r\n                    element={\r\n                        <ProtectedRoute>\r\n                            <EmployeeRegi />\r\n                        </ProtectedRoute>\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/employee/:employeeId\"\r\n                    element={\r\n                        <ProtectedRoute>\r\n                            <EmployeeDetail />\r\n                        </ProtectedRoute>\r\n                    }\r\n                />\r\n            </Routes>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nconst Root = () => (\r\n    <AuthProvider>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </AuthProvider>\r\n);\r\n\r\nexport default Root;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}