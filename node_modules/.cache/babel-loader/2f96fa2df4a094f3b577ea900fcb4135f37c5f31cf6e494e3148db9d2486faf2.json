{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{useAuth}from\"../config/AuthContext\";// AuthContext에서 useAuth 훅 가져오기\nimport axios from\"axios\";import\"../config/index.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LoginPage(){const[username,setUsername]=useState(\"\");const[password,setPassword]=useState(\"\");const[error,setError]=useState(\"\");const navigate=useNavigate();const[isLoading,setIsLoading]=useState(false);const{login}=useAuth();// AuthContext에서 setIsLoggedIn 가져오기\nconst handleLogin=async e=>{e.preventDefault();setIsLoading(true);try{const response=await axios.post(\"http://localhost:8080/api/login\",{username,password});const{success,message,token}=response.data;if(success){console.log(\"로그인 성공:\",message);login(token);// 로그인 상태를 AuthContext에서 업데이트\nnavigate(\"/dashboard\");// 대시보드로 이동\n}else{setError(message||\"알 수 없는 오류가 발생했습니다.\");}}catch(error){console.error(\"로그인 실패:\",error);if(error.response&&error.response.data&&error.response.data.message){setError(error.response.data.message);}else{setError(\"로그인에 실패했습니다. 다시 시도하세요.\");}}finally{setIsLoading(false);// 로딩 상태 비활성화\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"detail-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",className:\"label\",children:\"ID :\"}),/*#__PURE__*/_jsx(\"input\",{id:\"username\",type:\"text\",value:username,onChange:e=>setUsername(e.target.value),required:true,className:\"input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"label\",children:\"PW :\"}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,className:\"input\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",disabled:isLoading,children:isLoading?\"Loading...\":\"로그인\"})]})]});}export default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","useAuth","axios","jsx","_jsx","jsxs","_jsxs","LoginPage","username","setUsername","password","setPassword","error","setError","navigate","isLoading","setIsLoading","login","handleLogin","e","preventDefault","response","post","success","message","token","data","console","log","className","children","onSubmit","htmlFor","id","type","value","onChange","target","required","disabled"],"sources":["C:/Users/user/Desktop/weavuscalfront/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../config/AuthContext\"; // AuthContext에서 useAuth 훅 가져오기\r\nimport axios from \"axios\";\r\nimport \"../config/index.css\";\r\n\r\nfunction LoginPage() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { login } = useAuth(); // AuthContext에서 setIsLoggedIn 가져오기\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/api/login\", {\r\n        username,\r\n        password,\r\n      });\r\n      const { success, message, token } = response.data;\r\n      if (success) {\r\n        console.log(\"로그인 성공:\", message);\r\n        login(token); // 로그인 상태를 AuthContext에서 업데이트\r\n        navigate(\"/dashboard\"); // 대시보드로 이동\r\n      } else {\r\n        setError(message || \"알 수 없는 오류가 발생했습니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"로그인 실패:\", error);\r\n      if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n      ) {\r\n        setError(error.response.data.message);\r\n      } else {\r\n        setError(\"로그인에 실패했습니다. 다시 시도하세요.\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false); // 로딩 상태 비활성화\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"detail-container\">\r\n      <h1 className=\"title\">로그인</h1>\r\n      <form onSubmit={handleLogin} className=\"form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\" className=\"label\">\r\n            ID :\r\n          </label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\" className=\"label\">\r\n            PW :\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            className=\"input\"\r\n          />\r\n        </div>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <button type=\"submit\" className=\"submit-button\" disabled={isLoading}>\r\n          {isLoading ? \"Loading...\" : \"로그인\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}