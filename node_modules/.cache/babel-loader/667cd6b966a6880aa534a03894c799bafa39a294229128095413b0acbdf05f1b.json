{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\\\src\\\\config\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// 로그인 상태와 관련된 데이터를 관리할 Context 생성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(null); // token 상태 추가\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const savedToken = localStorage.getItem(\"token\");\n    if (savedToken) {\n      setIsLoggedIn(true);\n      setToken(savedToken);\n    }\n    setLoading(false);\n  }, []);\n  const login = newToken => {\n    setIsLoggedIn(true);\n    setToken(newToken);\n    localStorage.setItem(\"token\", newToken); // 토큰 저장\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setToken(null);\n    localStorage.removeItem(\"token\"); // 토큰 삭제\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this); // 초기화 중 로딩 상태 표시\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n_s2(AuthProvider, \"KxMvvuASUc0BDwo442tIZhpBmPc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","AuthProvider","_ref","_s2","children","isLoggedIn","setIsLoggedIn","token","setToken","loading","setLoading","savedToken","localStorage","getItem","login","newToken","setItem","logout","removeItem","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/react/src/config/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// 로그인 상태와 관련된 데이터를 관리할 Context 생성\r\nconst AuthContext = createContext(undefined);\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [token, setToken] = useState(null); // token 상태 추가\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const savedToken = localStorage.getItem(\"token\");\r\n    if (savedToken) {\r\n      setIsLoggedIn(true);\r\n      setToken(savedToken);\r\n    } setLoading(false);\r\n  }, []);\r\n\r\n  const login = (newToken) => {\r\n    setIsLoggedIn(true);\r\n    setToken(newToken);\r\n    localStorage.setItem(\"token\", newToken); // 토큰 저장\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\"); // 토큰 삭제\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // 초기화 중 로딩 상태 표시\r\n  }\r\n\r\n  return (\r\n      <AuthContext.Provider value={{ isLoggedIn, token, login, logout }}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAACO,SAAS,CAAC;AAE5C,OAAO,MAAMC,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACK,WAAW,CAAC;AAAA;AAACG,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGC,IAAA,IAAkB;EAAAC,GAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdL,aAAa,CAAC,IAAI,CAAC;MACnBE,QAAQ,CAACG,UAAU,CAAC;IACtB;IAAED,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAIC,QAAQ,IAAK;IAC1BT,aAAa,CAAC,IAAI,CAAC;IACnBE,QAAQ,CAACO,QAAQ,CAAC;IAClBH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBX,aAAa,CAAC,KAAK,CAAC;IACpBE,QAAQ,CAAC,IAAI,CAAC;IACdI,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,IAAIT,OAAO,EAAE;IACX,oBAAOb,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,oBACI1B,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEnB,UAAU;MAAEE,KAAK;MAAEO,KAAK;MAAEG;IAAO,CAAE;IAAAb,QAAA,EAC/DA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE7B,CAAC;AAACnB,GAAA,CAlCWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}