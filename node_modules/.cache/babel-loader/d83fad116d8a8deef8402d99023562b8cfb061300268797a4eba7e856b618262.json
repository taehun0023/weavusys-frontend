{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\\\src\\\\calcul\\\\pages\\\\YearDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { formatAmount } from \"../../utils/textUtils\";\nimport \"../../config/index.css\";\nimport { useFetchYearData } from \"../utils/useFetchYearData\"; // 연도별 데이터 요청 훅\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YearDashboard() {\n  _s();\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const {\n    error,\n    loading,\n    totalAccumulatedAmount,\n    fetchDataByYear\n  } = useFetchYearData(selectedYear); // 연도별 데이터 호출\n\n  const handleChangeYear = event => {\n    setSelectedYear(event.target.value); // 연도 변경 시 상태 업데이트\n  };\n  const handleSearchClick = () => {\n    fetchDataByYear(selectedYear); // 연도에 맞는 데이터 요청\n  };\n\n  // 유저 정보와 연도별 데이터가 로딩되거나 에러가 발생한 경우 처리\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"WEAVUS \\uD1F4\\uC9C1\\uAE08 \\uC5F0\\uB3C4\\uBCC4 \\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        className: \"label\",\n        children: \"\\uC5F0\\uB3C4 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"year\",\n        type: \"number\",\n        value: selectedYear,\n        onChange: handleChangeYear,\n        min: \"1111\",\n        max: \"9999\"\n        // className=\"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSearchClick,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"total-amount\",\n      children: [selectedYear, \" \\uB144\\uC758 \\uC801\\uB9BD \\uCD1D\\uC561: \", formatAmount(totalAccumulatedAmount)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(YearDashboard, \"h1f3y6yO75vKOZtyAYvMxD9WLso=\", false, function () {\n  return [useFetchYearData];\n});\n_c = YearDashboard;\nexport default YearDashboard;\nvar _c;\n$RefreshReg$(_c, \"YearDashboard\");","map":{"version":3,"names":["React","useState","formatAmount","useFetchYearData","jsxDEV","_jsxDEV","YearDashboard","_s","selectedYear","setSelectedYear","Date","getFullYear","error","loading","totalAccumulatedAmount","fetchDataByYear","handleChangeYear","event","target","value","handleSearchClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","min","max","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/react/src/calcul/pages/YearDashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  formatAmount,\r\n} from \"../../utils/textUtils\";\r\nimport \"../../config/index.css\";\r\nimport { useFetchYearData } from \"../utils/useFetchYearData\"; // 연도별 데이터 요청 훅\r\n\r\nfunction YearDashboard() {\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const { error, loading, totalAccumulatedAmount, fetchDataByYear }\r\n      = useFetchYearData(selectedYear); // 연도별 데이터 호출\r\n\r\n\r\n  const handleChangeYear = (event) => {\r\n    setSelectedYear(event.target.value); // 연도 변경 시 상태 업데이트\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    fetchDataByYear(selectedYear); // 연도에 맞는 데이터 요청\r\n  };\r\n\r\n  // 유저 정보와 연도별 데이터가 로딩되거나 에러가 발생한 경우 처리\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">WEAVUS 퇴직금 연도별 검색</h1>\r\n      <div className=\"year-container\">\r\n        <label htmlFor=\"year\" className=\"label\">\r\n          연도 선택:\r\n        </label>\r\n        <input\r\n            id=\"year\"\r\n            type=\"number\"\r\n            value={selectedYear}\r\n            onChange={handleChangeYear}\r\n            min=\"1111\"\r\n            max=\"9999\"\r\n            // className=\"input\"\r\n        />\r\n        <button className=\"submit-button\" onClick={handleSearchClick}>\r\n          검색\r\n        </button>\r\n      </div>\r\n      <p className=\"total-amount\">\r\n        {selectedYear} 년의 적립 총액: {formatAmount(totalAccumulatedAmount)}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YearDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,YAAY,QACP,uBAAuB;AAC9B,OAAO,wBAAwB;AAC/B,SAASC,gBAAgB,QAAQ,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAIS,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EAC1E,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,sBAAsB;IAAEC;EAAgB,CAAC,GAC3DZ,gBAAgB,CAACK,YAAY,CAAC,CAAC,CAAC;;EAGtC,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAClCR,eAAe,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BL,eAAe,CAACP,YAAY,CAAC,CAAC,CAAC;EACjC,CAAC;;EAED;EACA,IAAIK,OAAO,EAAE;IACX,oBAAOR,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClD;EAEA,IAAId,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAKgB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7C;EAEA,oBACErB,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAIgB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CrB,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjB,OAAA;QAAOsB,OAAO,EAAC,MAAM;QAACN,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRrB,OAAA;QACIuB,EAAE,EAAC,MAAM;QACTC,IAAI,EAAC,QAAQ;QACbV,KAAK,EAAEX,YAAa;QACpBsB,QAAQ,EAAEd,gBAAiB;QAC3Be,GAAG,EAAC,MAAM;QACVC,GAAG,EAAC;QACJ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFrB,OAAA;QAAQgB,SAAS,EAAC,eAAe;QAACY,OAAO,EAAEb,iBAAkB;QAAAE,QAAA,EAAC;MAE9D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNrB,OAAA;MAAGgB,SAAS,EAAC,cAAc;MAAAC,QAAA,GACxBd,YAAY,EAAC,2CAAW,EAACN,YAAY,CAACY,sBAAsB,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACnB,EAAA,CAhDQD,aAAa;EAAA,QAGdH,gBAAgB;AAAA;AAAA+B,EAAA,GAHf5B,aAAa;AAkDtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}