{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Desktop/react/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;import React from\"react\";import{Link,useNavigate}from\"react-router-dom\";import styled from\"styled-components\";import{useState}from\"react\";import{useAuth}from\"./AuthContext\";import\"../config/index.css\";// 메뉴바 컴포넌트\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Navbar=()=>{const[isMenuOpen,setIsMenuOpen]=useState(false);const navigate=useNavigate();// useNavigate 훅 사용\nconst{isLoggedIn,logout}=useAuth();// useAuth 훅을 사용하여 로그인 상태와 logout 함수 가져오기\n// 메뉴 열고 닫기\nconst toggleMenu=()=>{setIsMenuOpen(!isMenuOpen);};const handleLoginLogout=()=>{logout();// 로그아웃 처리\nnavigate(\"/\");// 로그인 페이지로 이동\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Nav,{children:/*#__PURE__*/_jsxs(NavContainer,{children:[/*#__PURE__*/_jsx(Logo,{children:\"WEAVUS\"}),/*#__PURE__*/_jsx(MenuIcon,{onClick:toggleMenu,children:isMenuOpen?\"닫기\":\"메뉴\"}),/*#__PURE__*/_jsx(Menu,{isOpen:isMenuOpen,children:isLoggedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MenuItem,{children:/*#__PURE__*/_jsx(StyledLink,{to:\"/dashboard\",children:\"\\uD1F4\\uC9C1\\uAE08\\uB9AC\\uC2A4\\uD2B8\"})}),/*#__PURE__*/_jsx(MenuItem,{children:/*#__PURE__*/_jsx(StyledLink,{to:\"/employee\",children:\"\\uC9C1\\uC6D0\\uB9AC\\uC2A4\\uD2B8\"})}),/*#__PURE__*/_jsx(MenuItem,{children:/*#__PURE__*/_jsx(StyledLink,{to:\"/admin\",children:\"\\uAD00\\uB9AC\\uC790\\uD398\\uC774\\uC9C0\"})}),/*#__PURE__*/_jsx(MenuItem,{children:/*#__PURE__*/_jsx(\"button\",{className:\"save-button\",onClick:handleLoginLogout,children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})})]}):/*#__PURE__*/_jsx(MenuItem,{children:/*#__PURE__*/_jsx(\"button\",{className:\"save-button\",onClick:handleLoginLogout,children:\"\\uB85C\\uADF8\\uC778\"})})})]})}),/*#__PURE__*/_jsx(ContentArea,{})]});};// 스타일링\nconst Nav=styled.nav(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: #333;\\n  padding: 10px 20px;\\n  position: fixed;\\n  width: 100%;\\n  top: 0;\\n  left: 0;\\n  z-index: 10;\\n\"])));const NavContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  flex-wrap: wrap;\\n\"])));const Logo=styled.h1(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: white;\\n  font-size: 24px;\\n  width: 18%;\\n\"])));const MenuIcon=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: none;\\n  color: white;\\n  font-size: 18px;\\n  cursor: pointer;\\n  width: 50%;\\n  @media (max-width: 768px) {\\n    display: block;\\n  }\\n\"])));const Menu=styled.ul(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  align-items: center;\\n  flex-wrap: wrap; /* \\uBA54\\uB274 \\uD56D\\uBAA9\\uB4E4\\uC774 \\uD654\\uBA74 \\uD06C\\uAE30\\uC5D0 \\uB9DE\\uCDB0 \\uC790\\uB3D9\\uC73C\\uB85C \\uC904\\uC5B4\\uB4E6 */\\n  width: 80%; /* \\uBA54\\uB274\\uC758 \\uB108\\uBE44\\uB97C 100%\\uB85C \\uC124\\uC815 */\\n  justify-content: flex-end; /* \\uBA54\\uB274 \\uD56D\\uBAA9\\uC744 \\uC624\\uB978\\uCABD\\uC73C\\uB85C \\uC815\\uB82C */\\n\\n  @media (max-width: 768px) {\\n    position: absolute;\\n    top: 60px;\\n    left: 0;\\n    right: 0;\\n    background-color: #333;\\n    flex-direction: column;\\n    align-items: center;\\n    height: \",\";\\n    overflow: hidden;\\n    transition: height 0.3s ease-in-out;\\n  }\\n\"])),props=>props.isOpen?\"auto\":\"0\");const MenuItem=styled.li(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  padding: 10px 20px;\\n\"])));const StyledLink=styled(Link)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  text-decoration: none;\\n  color: white;\\n  font-size: 16px;\\n  text-align: center;\\n  &:hover {\\n    color: #ccc;\\n  }\\n\"])));const ContentArea=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  padding-top: 60px; /* \\uBA54\\uB274\\uC758 \\uB192\\uC774\\uB9CC\\uD07C \\uD328\\uB529\\uC744 \\uCD94\\uAC00\\uD558\\uC5EC \\uCF58\\uD150\\uCE20\\uAC00 \\uAC00\\uB824\\uC9C0\\uC9C0 \\uC54A\\uB3C4\\uB85D \\uD568 */\\n\"])));export default Navbar;","map":{"version":3,"names":["React","Link","useNavigate","styled","useState","useAuth","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Navbar","isMenuOpen","setIsMenuOpen","navigate","isLoggedIn","logout","toggleMenu","handleLoginLogout","children","Nav","NavContainer","Logo","MenuIcon","onClick","Menu","isOpen","MenuItem","StyledLink","to","className","ContentArea","nav","_templateObject","_taggedTemplateLiteral","div","_templateObject2","h1","_templateObject3","_templateObject4","ul","_templateObject5","props","li","_templateObject6","_templateObject7","_templateObject8"],"sources":["C:/Users/user/Desktop/react/src/config/Navbar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport \"../config/index.css\";\r\n\r\n// 메뉴바 컴포넌트\r\nconst Navbar = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const navigate = useNavigate(); // useNavigate 훅 사용\r\n  const { isLoggedIn, logout } = useAuth(); // useAuth 훅을 사용하여 로그인 상태와 logout 함수 가져오기\r\n\r\n  // 메뉴 열고 닫기\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  const handleLoginLogout = () => {\r\n    logout(); // 로그아웃 처리\r\n    navigate(\"/\"); // 로그인 페이지로 이동\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <NavContainer>\r\n          <Logo>WEAVUS</Logo>\r\n          <MenuIcon onClick={toggleMenu}>\r\n            {isMenuOpen ? \"닫기\" : \"메뉴\"}\r\n          </MenuIcon>\r\n          <Menu isOpen={isMenuOpen}>\r\n            {isLoggedIn ? (\r\n              <>\r\n                <MenuItem>\r\n                  <StyledLink to=\"/dashboard\">퇴직금리스트</StyledLink>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  <StyledLink to=\"/employee\">직원리스트</StyledLink>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  <StyledLink to=\"/admin\">관리자페이지</StyledLink>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  <button className=\"save-button\" onClick={handleLoginLogout}>\r\n                    로그아웃\r\n                  </button>\r\n                </MenuItem>\r\n              </>\r\n            ) : (\r\n              <MenuItem>\r\n                <button className=\"save-button\" onClick={handleLoginLogout}>\r\n                  로그인\r\n                </button>\r\n              </MenuItem>\r\n            )}\r\n          </Menu>\r\n        </NavContainer>\r\n      </Nav>\r\n      <ContentArea>{}</ContentArea>\r\n    </>\r\n  );\r\n};\r\n\r\n// 스타일링\r\nconst Nav = styled.nav`\r\n  background-color: #333;\r\n  padding: 10px 20px;\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  color: white;\r\n  font-size: 24px;\r\n  width: 18%;\r\n`;\r\n\r\nconst MenuIcon = styled.div`\r\n  display: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  width: 50%;\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  align-items: center;\r\n  flex-wrap: wrap; /* 메뉴 항목들이 화면 크기에 맞춰 자동으로 줄어듦 */\r\n  width: 80%; /* 메뉴의 너비를 100%로 설정 */\r\n  justify-content: flex-end; /* 메뉴 항목을 오른쪽으로 정렬 */\r\n\r\n  @media (max-width: 768px) {\r\n    position: absolute;\r\n    top: 60px;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: #333;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: ${(props) => (props.isOpen ? \"auto\" : \"0\")};\r\n    overflow: hidden;\r\n    transition: height 0.3s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst MenuItem = styled.li`\r\n  padding: 10px 20px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: white;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  &:hover {\r\n    color: #ccc;\r\n  }\r\n`;\r\n\r\nconst ContentArea = styled.div`\r\n  padding-top: 60px; /* 메뉴의 높이만큼 패딩을 추가하여 콘텐츠가 가려지지 않도록 함 */\r\n`;\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}