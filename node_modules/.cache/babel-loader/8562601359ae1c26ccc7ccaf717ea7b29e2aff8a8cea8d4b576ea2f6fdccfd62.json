{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport createAxiosInstance from \"../../config/api\";\nexport function InstitutionListApi() {\n  _s();\n  const [apiInstitutionList, setInstitutionList] = useState([]);\n  const [instloading, setLoading] = useState(false);\n  const [insterror, setError] = useState(\"\");\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const loadList = async () => {\n    setLoading(true);\n    setError(\"\");\n    setResponseMessage(\"\"); // 상태 초기화\n    try {\n      const axiosInstance = createAxiosInstance(); // 인스턴스 생성\n      const response = await axiosInstance.get(\"/personnel/institution/list\");\n      setInstitutionList(response.data);\n      setResponseMessage(\"교육기관 정보를 불러왔습니다.\");\n    } catch (err) {\n      setError(\"교육기관 정보를 불러오지 못했습니다.\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    loadList,\n    instloading,\n    insterror,\n    responseMessage,\n    apiInstitutionList\n  };\n}\n_s(InstitutionListApi, \"Q3t2kqeXRXhVnanM0BfYXkxClOk=\");\n_c = InstitutionListApi;\nvar _c;\n$RefreshReg$(_c, \"InstitutionListApi\");","map":{"version":3,"names":["useEffect","useState","createAxiosInstance","InstitutionListApi","_s","apiInstitutionList","setInstitutionList","instloading","setLoading","insterror","setError","responseMessage","setResponseMessage","loadList","axiosInstance","response","get","data","err","console","error","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/react/src/personnel/utils/InstitutionListApi.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport createAxiosInstance from \"../../config/api\";\r\n\r\nexport function InstitutionListApi() {\r\n    const [apiInstitutionList, setInstitutionList] = useState([]);\r\n    const [instloading, setLoading] = useState(false);\r\n    const [insterror, setError] = useState(\"\");\r\n    const [responseMessage, setResponseMessage] = useState(\"\");\r\n\r\n    const loadList = async () => {\r\n        setLoading(true);\r\n        setError(\"\");\r\n        setResponseMessage(\"\"); // 상태 초기화\r\n                try {\r\n                    const axiosInstance = createAxiosInstance(); // 인스턴스 생성\r\n                    const response = await axiosInstance.get(\"/personnel/institution/list\");\r\n                    setInstitutionList(response.data);\r\n                    setResponseMessage(\"교육기관 정보를 불러왔습니다.\");\r\n                } catch (err) {\r\n                    setError(\"교육기관 정보를 불러오지 못했습니다.\");\r\n                    console.error(err);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n    };\r\n    return { loadList, instloading, insterror, responseMessage, apiInstitutionList};\r\n}\r\n"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,mBAAmB,MAAM,kBAAkB;AAElD,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,kBAAkB,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC7D,MAAM,CAACM,WAAW,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,SAAS,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMY,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzBL,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZE,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,IAAI;MACA,MAAME,aAAa,GAAGZ,mBAAmB,CAAC,CAAC,CAAC,CAAC;MAC7C,MAAMa,QAAQ,GAAG,MAAMD,aAAa,CAACE,GAAG,CAAC,6BAA6B,CAAC;MACvEV,kBAAkB,CAACS,QAAQ,CAACE,IAAI,CAAC;MACjCL,kBAAkB,CAAC,kBAAkB,CAAC;IAC1C,CAAC,CAAC,OAAOM,GAAG,EAAE;MACVR,QAAQ,CAAC,sBAAsB,CAAC;MAChCS,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACtB,CAAC,SAAS;MACNV,UAAU,CAAC,KAAK,CAAC;IACrB;EACZ,CAAC;EACD,OAAO;IAAEK,QAAQ;IAAEN,WAAW;IAAEE,SAAS;IAAEE,eAAe;IAAEN;EAAkB,CAAC;AACnF;AAACD,EAAA,CAvBeD,kBAAkB;AAAAkB,EAAA,GAAlBlB,kBAAkB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}