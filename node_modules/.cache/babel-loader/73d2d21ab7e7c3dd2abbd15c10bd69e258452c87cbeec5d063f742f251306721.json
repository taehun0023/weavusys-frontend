{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\\\src\\\\pages\\\\EmployeeDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getEmployeeTypeText } from \"../utils/textUtils\";\nimport { useState, useEffect } from \"react\";\nimport \"../config/index.css\";\nimport createAxiosInstance from \"../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeDashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isFetched, setIsFetched] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (isFetched) return; // 이미 호출된 경우 중단\n\n      setLoading(true); // 로딩 시작\n\n      try {\n        const axiosInstance = createAxiosInstance(); // 인스턴스 생성\n        const response = await axiosInstance.get(\"/employees/lists\");\n        if (Array.isArray(response.data)) {\n          setData(response.data);\n        } else {\n          setError(\"서버에서 받은 데이터 형식이 올바르지 않습니다.\");\n        }\n        setIsFetched(true); // 데이터 로드 완료\n      } catch (error) {\n        if (error.response) {\n          console.error(\"서버 에러:\", error.response.status, error.response.data);\n          setError(\"서버 오류가 발생했습니다.\");\n        } else if (error.request) {\n          console.error(\"응답 없음:\", error.request);\n          setError(\"서버로부터 응답이 없습니다.\");\n        } else {\n          console.error(\"요청 설정 에러:\", error.message);\n          setError(\"요청에 문제가 발생했습니다.\");\n        }\n      } finally {\n        setLoading(false); // 로딩 종료\n      }\n    };\n    fetchData();\n  }, [isFetched]);\n  const handleRowClick = () => {\n    navigate(\"/employee/new\");\n  };\n  const handleEmployeeClick = employeeId => {\n    navigate(\"/employee/\".concat(employeeId)); // 상세 페이지로 이동\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"WEAVUS \\uC0AC\\uC6D0 \\uC77C\\uB78C \\uB9AC\\uC2A4\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: () => handleRowClick(),\n      children: \"\\uC9C1\\uC6D0 \\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"loading\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"error\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"\\uC785\\uC0AC\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"\\uACC4\\uC57D \\uC0C1\\uD0DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-data\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              onClick: () => handleEmployeeClick(employee.id) // 클릭 시 handleEmployeeClick 함수 호출\n              ,\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-data\",\n            children: employee.entryDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"table-data\",\n            children: getEmployeeTypeText(employee.employeeType, employee.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeDashboard, \"cFY1AhUIWaVWUyxS5snJAy4XrgA=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useNavigate","getEmployeeTypeText","useState","useEffect","createAxiosInstance","jsxDEV","_jsxDEV","EmployeeDashboard","_s","navigate","data","setData","error","setError","loading","setLoading","isFetched","setIsFetched","fetchData","axiosInstance","response","get","Array","isArray","console","status","request","message","handleRowClick","handleEmployeeClick","employeeId","concat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","employee","id","name","entryDate","employeeType","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/react/src/pages/EmployeeDashboard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getEmployeeTypeText } from \"../utils/textUtils\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../config/index.css\";\r\nimport createAxiosInstance from \"../config/api\";\r\n\r\nfunction EmployeeDashboard() {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isFetched, setIsFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (isFetched) return; // 이미 호출된 경우 중단\r\n\r\n      setLoading(true); // 로딩 시작\r\n\r\n      try {\r\n        const axiosInstance = createAxiosInstance(); // 인스턴스 생성\r\n        const response = await axiosInstance.get(\"/employees/lists\");\r\n        if (Array.isArray(response.data)) {\r\n          setData(response.data);\r\n        } else {\r\n          setError(\"서버에서 받은 데이터 형식이 올바르지 않습니다.\");\r\n        }\r\n        setIsFetched(true); // 데이터 로드 완료\r\n      } catch (error) {\r\n        if (error.response) {\r\n          console.error(\r\n            \"서버 에러:\",\r\n            error.response.status,\r\n            error.response.data\r\n          );\r\n          setError(\"서버 오류가 발생했습니다.\");\r\n        } else if (error.request) {\r\n          console.error(\"응답 없음:\", error.request);\r\n          setError(\"서버로부터 응답이 없습니다.\");\r\n        } else {\r\n          console.error(\"요청 설정 에러:\", error.message);\r\n          setError(\"요청에 문제가 발생했습니다.\");\r\n        }\r\n      } finally {\r\n        setLoading(false); // 로딩 종료\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [isFetched]);\r\n\r\n  const handleRowClick = () => {\r\n    navigate(`/employee/new`);\r\n  };\r\n\r\n  const handleEmployeeClick = (employeeId) => {\r\n    navigate(`/employee/${employeeId}`); // 상세 페이지로 이동\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">WEAVUS 사원 일람 리스트</h1>\r\n      <button className=\"submit-button\" onClick={() => handleRowClick()}>\r\n        직원 등록\r\n      </button>\r\n      {loading && <loading className=\"loading\">Loading...</loading>}\r\n      {error && <error className=\"error-message\">{error}</error>}\r\n      {!loading && !error && (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"table-header\">이름</th>\r\n              <th className=\"table-header\">입사일</th>\r\n              <th className=\"table-header\">계약 상태</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((employee) => (\r\n              <tr key={employee.id}>\r\n                <td className=\"table-data\">\r\n                  <button\r\n                    className=\"action-button\"\r\n                    onClick={() => handleEmployeeClick(employee.id)} // 클릭 시 handleEmployeeClick 함수 호출\r\n                  >\r\n                    {employee.name}\r\n                  </button>\r\n                </td>\r\n                <td className=\"table-data\">{employee.entryDate}</td>\r\n                <td className=\"table-data\">\r\n                  {getEmployeeTypeText(employee.employeeType, employee.status)}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}